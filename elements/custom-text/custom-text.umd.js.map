{
  "version": 3,
  "file": "custom-text.umd.js",
  "sources": ["custom-text.umd.js"],
  "sourcesContent": [
    "/**\n * Copyright 2019 Amy\n * @license MIT, see License.md for full text.\n */\nimport { LitElement, html } from \"@polymer/lit-element\";\n\n/**\n * `custom-text`\n * `Text content for info card`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @lit-html\n * @lit-element\n * @demo demo/index.html\n */\nclass CustomText extends LitElement {\n  \n  // render function\n  render() {\n    return html`\n<style>:host { \n  display: block; \n  font-family: Roboto;\n  font-style: normal;\n  font-weight: bold;\n  line-height: normal;\n  font-size: 14px;\n  text-align: center;\n  color: #959595;\n  }\n:host([hidden]) { display: none; }</style>\n<slot></slot>\n<div>${this.content}</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"content\": {\n    \"name\": \"content\",\n    \"type\": \"String\",\n    \"value\": \"\",\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  tag() {\n    return \"custom-text\";\n  }\n\n  // life cycle\n  constructor() {\n    super();\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  // static get observedAttributes() {\n  //   return [];\n  // }\n  // disconnectedCallback() {}\n\n  // attributeChangedCallback(attr, oldValue, newValue) {}\n}\ncustomElements.define(\"custom-text\", CustomText);\nexport { CustomText };\n"
  ],
  "names": [
    "CustomText",
    "LitElement",
    "html",
    "this",
    "content",
    "customElements",
    "define"
  ],
  "mappings": "olDAkBMA,2YAAgBC,yDAIXC,WAaJC,KAAKC,6CAsBD,sDAjBA,SACE,MACD,eACA,eACC,uBACa,YACV,sHA+BhBC,eAAeC,OAAO,WAAYN"
}
